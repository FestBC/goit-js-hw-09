{"version":3,"file":"2-form.js","sources":["../src/js/2-form.js"],"sourcesContent":["\"use strict\";\n\nconst formData = {\n    email: \"\",\n    message: \"\"\n};\n\nconst form = document.querySelector(\".feedback-form\");\n\n// #region Проверка, есть ли данные формы на локальном хранилище.\n/* Сделал try...catch, чтобы пропустить незначительную ошибку, где у нас при определённых\n   обстоятельствах нет ключа feedback-form-state на локальном хранилище. Не вижу смысла\n   писать тернальный оператор, if и подобное, чтобы этого избежать. Просто сделает код более мусорным. */\ntry {\n    // #region Переменные полей с локального хранилища.\n    const emailLocalStorage = JSON.parse(localStorage.getItem(\"feedback-form-state\")).email;\n    const messageLocalStorage = JSON.parse(localStorage.getItem(\"feedback-form-state\")).message;\n    // #endregion\n    // Подметил оператор нулевого слияния на примере кода в конце второго блока 9-го модуля.\n    form.elements.email.value = emailLocalStorage ?? \"\";\n    form.elements.message.value = messageLocalStorage ?? \"\";\n    /* Добавил это, ибо заметил баг, где после перезагрузки страницы и писания текста\n       в одно из полей пропадает инфа с другого поля, потому что объект в начале\n       пустой, и заполняется только один ключ объекта. Это и создаёт прикол, когда\n       мы перезагружаем страничку, у нам появляется текста на всех полях, пишем в\n       одно поле текст, перезагружаем страничку — и у нас одно поле пустое, а\n       другое — нет, ибо на локальное хранилище у нас сохраняется пустой ключ объекта. */\n    formData.email = emailLocalStorage ?? \"\";\n    formData.message = messageLocalStorage ?? \"\";\n} catch (error) {\n    console.log(\"This error isn't critical.\");\n    console.error(error);\n}\n// #endregion\n\nform.addEventListener(\"input\", event => {\n    const targetValueTrim = event.target.value.trim();\n /* Если текущая цель есть поле email,\n    то присвоить ключу email объекта formData значение текущей цели,\n    иначе присвоить ключу message объекта formData значение текущей цели. */\n    event.target === form.elements.email ? formData.email = targetValueTrim : formData.message = targetValueTrim;\n // Присвоить ключу feedback-form-state локального хранилища значение объекта formData, который переделан под стандарт JSON.\n    localStorage.setItem(\"feedback-form-state\", JSON.stringify(formData));\n});\n\nform.addEventListener(\"submit\", event => {\n    event.preventDefault();\n\n    if (form.elements.email.value && form.elements.message.value) {\n        console.log(formData);\n\n        localStorage.removeItem(\"feedback-form-state\");\n        formData.email = \"\";\n        formData.message = \"\";\n        form.elements.email.value = \"\";\n        form.elements.message.value = \"\";\n    } else {\n        alert(\"Fill please all fields\");\n    }\n});"],"names":["formData","form","emailLocalStorage","messageLocalStorage","error","event","targetValueTrim"],"mappings":"wFAEA,MAAMA,EAAW,CACb,MAAO,GACP,QAAS,EACb,EAEMC,EAAO,SAAS,cAAc,gBAAgB,EAMpD,GAAI,CAEA,MAAMC,EAAoB,KAAK,MAAM,aAAa,QAAQ,qBAAqB,CAAC,EAAE,MAC5EC,EAAsB,KAAK,MAAM,aAAa,QAAQ,qBAAqB,CAAC,EAAE,QAGpFF,EAAK,SAAS,MAAM,MAAQC,GAAqB,GACjDD,EAAK,SAAS,QAAQ,MAAQE,GAAuB,GAOrDH,EAAS,MAAQE,GAAqB,GACtCF,EAAS,QAAUG,GAAuB,EAC9C,OAASC,EAAO,CACZ,QAAQ,IAAI,4BAA4B,EACxC,QAAQ,MAAMA,CAAK,CACvB,CAGAH,EAAK,iBAAiB,QAASI,GAAS,CACpC,MAAMC,EAAkBD,EAAM,OAAO,MAAM,KAAM,EAIjDA,EAAM,SAAWJ,EAAK,SAAS,MAAQD,EAAS,MAAQM,EAAkBN,EAAS,QAAUM,EAE7F,aAAa,QAAQ,sBAAuB,KAAK,UAAUN,CAAQ,CAAC,CACxE,CAAC,EAEDC,EAAK,iBAAiB,SAAUI,GAAS,CACrCA,EAAM,eAAgB,EAElBJ,EAAK,SAAS,MAAM,OAASA,EAAK,SAAS,QAAQ,OACnD,QAAQ,IAAID,CAAQ,EAEpB,aAAa,WAAW,qBAAqB,EAC7CA,EAAS,MAAQ,GACjBA,EAAS,QAAU,GACnBC,EAAK,SAAS,MAAM,MAAQ,GAC5BA,EAAK,SAAS,QAAQ,MAAQ,IAE9B,MAAM,wBAAwB,CAEtC,CAAC"}